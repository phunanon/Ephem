
(where val
  (map #(if % N (println %1))

   [(= (range 5 10)                  [5 6 7 8 9])
    (= (map + [0 1 2] [4 5 6 7])     [4 6 8])
    (= (map + [3 1 4] (range))       [3 2 6])
    (= (map * (range 4) (range))     [0 1 4 9])
    (= (map + [0 1 2] 3)             [3 4 5])
    (= (map + (range) (range))       N)
    (= (map #(str % \!) [1 2 3])     ["1!" "2!" "3!"])
    (= (map #(% 12 3) [+ - * /])     [15 9 36 4]) 
    (= (map + (cycle 2 1) (range 6)) [2 2 4 4 6 6])
    (= (take 5 (skip 4 (range)))     [4 5 6 7 8])
    (= (take 5 4 (range))            [4 5 6 7 8])
    (= (emit 3 5)                    [3 3 3 3 3])
    (= 3.14 3.14 3.14)
    (not (= T F 1))
    (= [0 1 2] (range 3))
    (not (= 123 [3 4 5]))]

    (range)))
(println "Tests complete.")